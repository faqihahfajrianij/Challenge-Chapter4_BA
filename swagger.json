{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "MyAppBangking API",
    "description": "API for a banking application ini adalah hasil dari Callenge Document Chapther 5 yang dibuat oleh Faqihah Fajriani"
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "paths": {
    "/api/v1/accounts": {
      "post": {
        "summary": "Create a new account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "accountName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully"
          },
          "500": {
            "description": "An error occurred while creating the account"
          }
        }
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "summary": "Get account by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved successfully"
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "An error occurred while fetching the account"
          }
        }
      },
      "put": {
        "summary": "Update an account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully"
          },
          "500": {
            "description": "An error occurred while updating the account"
          }
        }
      },
      "delete": {
        "summary": "Delete an account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "500": {
            "description": "An error occurred while deleting the account"
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "Create a new user with a profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "identityType": {
                        "type": "string"
                      },
                      "identityNumber": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "500": {
            "description": "An error occurred while creating the user"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "An error occurred while fetching the user"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "500": {
            "description": "An error occurred while updating the user"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "500": {
            "description": "An error occurred while deleting the user"
          }
        }
      }
    },
    "/api/v1/transactions": {
      "post": {
        "summary": "Create a new transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceAccountId": {
                    "type": "integer"
                  },
                  "destinationAccountId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction successful"
          },
          "500": {
            "description": "An error occurred while processing the transaction"
          }
        }
      }
    },
    "/api/v1/transactions/{id}": {
      "get": {
        "summary": "Get transaction by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successfully"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "An error occurred while fetching the transaction"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}